# This is a basic workflow to help you get started with Actions

name: my-telegram-bot-messenger

# Controls when the workflow will run
on:
# Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

  schedule:
    # 9am everyday
    # - cron: "0 9 * * *"
    # 9pm everyday
    # - cron: "0 21 * * *"
    # Debug: Run every hour
    # - cron: "0 * * * *"
    
    # “At minute 0 past every 2nd hour from 7 through 22.” ~ crontab.guru.
    # Runs on the 7, 9, 11, 13, 15, 17, 19 and 21st hour By Github Actions hover.
    - cron: "0 7-22/2 * * *"
    

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      # - name: Run a one-line script
      #   run: echo Hello, world!

      # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        env:
          ID_RATAN: ${{secrets.TELEGRAM_CHAT_ID_RATAN}}
          ID_SAHIL: ${{secrets.TELEGRAM_CHAT_ID_SAHIL}}
          TOKEN: ${{secrets.TELEGRAM_ACCESS_TOKEN}}
            # Now I can reference ID_RATAN and ID_SAHIL in below bash script.
        run: .github/cron-job.sh
